// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"

	"github.com/google/uuid"
)

type BenchmarkKtype string

const (
	BenchmarkKtypeHigh BenchmarkKtype = "high"
)

func (e *BenchmarkKtype) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = BenchmarkKtype(s)
	case string:
		*e = BenchmarkKtype(s)
	default:
		return fmt.Errorf("unsupported scan type for BenchmarkKtype: %T", src)
	}
	return nil
}

type NullBenchmarkKtype struct {
	BenchmarkKtype BenchmarkKtype `json:"benchmark_ktype"`
	Valid          bool           `json:"valid"` // Valid is true if BenchmarkKtype is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullBenchmarkKtype) Scan(value interface{}) error {
	if value == nil {
		ns.BenchmarkKtype, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.BenchmarkKtype.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullBenchmarkKtype) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.BenchmarkKtype), nil
}

type BenchmarkResult struct {
	CandidateID      uuid.NullUUID      `json:"candidate_id"`
	JobDescriptionID uuid.NullUUID      `json:"job_description_id"`
	BenchmarkType    NullBenchmarkKtype `json:"benchmark_type"`
}

type BenchmarkResultDetail struct {
	ID               int32              `json:"id"`
	CandidateID      uuid.NullUUID      `json:"candidate_id"`
	JobDescriptionID uuid.NullUUID      `json:"job_description_id"`
	BenchmarkType    NullBenchmarkKtype `json:"benchmark_type"`
	Result           sql.NullString     `json:"result"`
}

type Candidate struct {
	ID              uuid.UUID      `json:"id"`
	AppliedPosition sql.NullString `json:"applied_position"`
	Email           sql.NullString `json:"email"`
	CvInfo          sql.NullString `json:"cv_info"`
	CvPath          sql.NullString `json:"cv_path"`
	OriginalCvName  sql.NullString `json:"original_cv_name"`
	FileHash        sql.NullString `json:"file_hash"`
	PlainText       sql.NullString `json:"plain_text"`
	Embedding       interface{}    `json:"embedding"`
	CreatedAt       sql.NullTime   `json:"created_at"`
}

type JobDescription struct {
	ID        uuid.UUID      `json:"id"`
	PlainText sql.NullString `json:"plain_text"`
	JobTitle  sql.NullString `json:"job_title"`
	JdPath    sql.NullString `json:"jd_path"`
	FileHash  sql.NullString `json:"file_hash"`
	JdInfo    sql.NullString `json:"jd_info"`
	Embedding interface{}    `json:"embedding"`
}

type User struct {
	ID       uuid.UUID `json:"id"`
	Username string    `json:"username"`
	Password string    `json:"password"`
}
